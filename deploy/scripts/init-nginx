#!/bin/bash
#nginx install script
#nginx version 1.14.0
#OS centos7
#author: urmsone
#createtime: 2018.11.30

add_user_and_group() {
        echo "add_user and add group start..."
        user="nginx"
        group="nginx"
        groupadd $group

        #create user if not exists
        egrep "^$user" /etc/passwd
        if [ $? -ne 0 ]; then
                # ll /home |grep ${user}
                find /home | grep test_user >&/dev/null
                if [ $? -ne 0 ]; then
                        useradd $user -g $group -p $user
                        echo "user add ${user}"
                else
                        echo "/home/${user} is existed!User creation failed!Please rm the file and try again"
                fi
        fi
        echo "add_user and add group finished..."
}

add_tem_file() {
        echo "add_tem_file start..."
        folder="/var/tem"
        if [[ ! -d "${folder}" ]]; then
                echo "folder:/var/tem/nginx is not existed!"
                mkdir /var/tem
                mkdir /var/tem/nginx
                echo "folder:/var/tem/nginx is created!"
        fi
        echo "add_tem_file finished..."
}

init_env() {
        echo "init_env start..."
        yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel wget make
        # groupadd nginx
        # useradd nginx -g nginx -p nginx
        add_user_and_group
        # mkdir /var/tem
        # kdir /var/tem/nginx
        add_tem_file
        echo "init_env finished..."
}

install_nginx() {
        echo "install_nginx start..."
        wget http://nginx.org/download/nginx-1.14.0.tar.gz && tar -zxvf nginx-1.14.0.tar.gz
        cd nginx-1.14.0
        cfg="--prefix=/usr --sbin-path=/usr/local/sbin/nginx --conf-path=/usr/local/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --pid-path=/usr/local/run/nginx/nginx.pid --lock-path=/usr/local/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/tem/nginx/client --http-proxy-temp-path=/var/tem/nginx/proxy --http-fastcgi-temp-path=/var/tem/nginx/fcgi --with-http_stub_status_module"
        ./configure $cfg
        make && make install
        echo "install_nginx finished..."
}

conf_systemd() {
        echo "conf_systemd start..."
        sed -i '9apid    /usr/local/run/nginx/nginx.pid;' /usr/local/nginx/nginx.conf
        touch /usr/lib/systemd/system/nginx.service

        cat <<EOF >/usr/lib/systemd/system/nginx.service
[Unit]
Description=nginx - high performance web server
After=network.target remote-fs.target nss-lookup.target

[Service]
Type=forking
PIDFile=/usr/local/run/nginx/nginx.pid
ExecStartPre=/usr/local/sbin/nginx -t -c /usr/local/nginx/nginx.conf
ExecStart=/usr/local/sbin/nginx -c /usr/local/nginx/nginx.conf
ExecReload=/usr/local/sbin/nginx -s reload
ExecStop=/usr/local/sbin/nginx -s stop
ExecQuit=/usr/local/sbin/nginx -s quit
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF

        echo "conf_systemd finished..."
}

main() {
        init_env
        install_nginx
        conf_systemd
        systemctl daemon-reload
        systemctl start nginx
}
main
